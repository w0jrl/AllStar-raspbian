;
; Usbradio channel driver Configuration File
; For more information about this configuration file, see:
        ; https://wiki.pttlink.org/wiki/USBRadio_Channel_Driver#usbradio.conf
;
[general]
;
[usb]
;
eeprom = 0    ; Leave this set to 0 for USB devices without an eeprom.
        ; Set to 1 for devices with an eeprom.
hdwtype = 0    ; Leave this set to 0 for USB sound fobs modified using
        ; the instructions from usbfob.pdf. Use a setting of 
        ; 1 for Dingotel/Sph interfaces.
;
rxboost = 1    ; 0 = 20db attenuator inserted, 1= 20db attenuator removed
        ; Set to 1 for additional gain if using a low-level receiver output.
;
rxctcssrelax = 1    ; reduce talkoff from radios without CTCSS Tx high-pass filters
        ; Do not change this, leave this as a 1.
;
rxsqhyst = 500    ; Setting Squelch Hysteresis
        ; 3000 is the default amount.
        ; An amount of 500 seems good.
        ; Set the squelch to the highest number revealed when doing a "radio
        ; tune rxsquelch" - running the command multiple (like 20) times in a row.
        ; <http://allstarnode.com/wiki/lib/exe/fetch.php?media=asterisk-notes-wj8g.pdf>
;
txctcssdefault = 100.0    ; default tx ctcss freq, any frequency permitted
        ; Comment out if connected to a repeater controller.
rxctcssfreqs = 100.0    ; rx ctcss freqs in floating point. must be in table
        ; Comment out if connected to a repeater controller.
txctcssfreqs = 100.0    ; tx ctcss freqs, any frequency permitted
        ; Comment out if connected to a repeater controller.
;rxctcssoverride = 0    ; Set to 1 or yes to start out in carrier squelch mode
;
carrierfrom = dsp    ; no,usb,usbinvert,dsp,vox 
        ; no - no carrier detection at all
        ; usb - from the COR line on the modified USB sound fob
        ; usbinvert - from the inverted COR line on the modified USB sound fob
        ; dsp - from RX noise using dsp techniques
        ; vox - voice activated from RX audio
        ; Use either usb or usbinvert if connected to a repeater controller.
;
ctcssfrom = dsp    ; no,usb,dsp
        ; no - CTCSS decoding, system will be carrier squelch
        ; usb - CTCSS decoding using input from USB FOB 
        ; dsp - CTCSS decoding using RX audio in DSP.
        ; rxdemod option must be set to flat for this to work.
        ; Use no if connected to a repeater controller.
;
rxdemod = flat    ; input type from radio: no,speaker,flat
        ; no - RX audio input not used
        ; flat - Use RX audio from discriminator (before de-emphasis)
        ; speaker - use de-emphasized audio
;
txboost = 0    ; Add transmitter audio gain boost: 0,1
        ; 0 = no transmitter audio gain boost, 1 = transmitter audio gain boost applied
        ; Set to 1 if using a transmitter with low level output.
;
txprelim = yes    ; Audio processing on left output channel: no,yes
        ; no - Audio is not pre-emphasized and limited.
        ; Suitable for use on a microphone input
        ; yes - Audio is pre-emphasized and limited.
        ; Suitable for direct connection to an FM modulator
;
txlimonly = yes    ; Audio limiting with no pre-emphasis on output channel: no,yes
        ; no - Audio is not limited.
        ; yes - Audio is  limited.
        ; Suitable for transmitters with no limiting but with pre-emphasis.
;
txtoctype = notone    ; Transmit tone control type: no,phase,notone
        ; no - CTCSS tone encoding with no hang time
        ; phase - encode CTCSS and reverse phase 
        ; AKA ("reverse burst") before unkeying TX
        ; notone - encode CTCSS and stop sending tone before unkeying TX
        ; AKA ("chicken burst")
        ; Set to no if connected to a repeater controller.
;
txmixa = composite    ; Left channel output: no,voice,tone,composite,auxvoice
        ; no - Do not output anything
        ; voice - output voice only
        ; tone - CTCSS tone only
        ; composite - voice and tone
        ; auxvoice - auxiliary voice output at headphone level for monitoring
        ; Set to voice if connected to a repeater controller.
;
txmixb = no    ; Right channel output: no,voice,tone,composite,auxvoice
        ; See txmixa above.
        ; Not used when connected to a repeater controller.
invertptt = 0    ; Invert PTT 0 = ground to transmit, 1 = open to transmit
        ; This is the collector lead of the 2n4401 on the modified
        ; usb sound fob.
        ; please refer to the how-to for the procedure to do this.
;
duplex = 1    ; Duplex Setting: 0,1
        ; 0 = half duplex, 1 = full duplex
        ; Leave this set to 1. 
        ; Finer duplex control is set in rpt.conf.
;
;rxondelay = 20    ; Uncomment and/or adjust for simplex nodes to eliminate "Ping Ponging"
        ; or "Relay Racing".
        ; A positive value here will instruct the usbradio driver to ignore the
        ; COR line for a specified number of 20mSec intervals regardless if the
        ; PTT is keyed. Use this only on simplex nodes, and leave commented
        ; out for repeaters or other full duplex nodes.
;
rxsquelchdelay = 100    ; Ignores the receiver for 100 milliseconds after a user unkeys.
        ; Helps to prevent squelch crashes from radios that don't handle squelch properly.
        ; Do not use this setting if rxdemod is set to speaker, or if running a simplex node.
;
jbenable = yes    ; Enables the use of a jitterbuffer on the receiving side of an
        ; USBRADIO channel. Defaults to "no". An enabled jitterbuffer will
        ; be used only if the sending side can create and the receiving
        ; side cannot accept jitter. The USBRADIO channel can't accept jitter,
        ; thus an enabled jitterbuffer on the receive USBRADIO side will always
        ; be used if the sending side can create jitter.
;
jbmaxsize = 250    ; Max length of the jitterbuffer in milliseconds.
;
jbresyncthreshold = 1000    ; Jump in the frame timestamps over which the jitterbuffer is
        ; resynchronized. Useful to improve the quality of the voice, with
        ; big jumps in broken timestamps, usually sent from exotic devices
        ; and programs. Defaults to 1000.
;
jbimpl = adaptive    ; Jitterbuffer implementation, used on the receiving side of an USBRADIO
        ; channel. Two implementations are currently available - "fixed"
        ; (with size always equals to jbmax-size) and "adaptive" (with
        ; variable size, actually the new jb of IAX2). Defaults to fixed.
;
jblog = no    ; Enables jitterbuffer frame logging. Defaults to "no".
;
rxlpf = 1    ; Receiver Audio Low Pass Filter 0,1,2
        ; 0 - 3.0 kHz cutoff (Default) value for reduced noise and increased intelligibility. (default)
        ; 1 - 3.3 kHz cutoff for increased high end, sibilance and brightness.
        ; 2 - 3.5 kHz cutoff for even more high end, sibilance and brightness.
;
rxhpf = 1    ; Receiver Audio High Pass Filter 0,1
        ; 0 - 300 Hz cutoff. (Default) value to reduce sub-audible signals for retransmission and in the receiver speaker. (default)
        ; 1 - 250 Hz cutoff for additional received and retransmitted bass response.
        ; recommend using this filter with a CTCSS tone no higher than 186.2 Hz.
;
txlpf = 1    ; Transmitter Audio Low Pass Filter 0,1
        ; 0 - 3.0 kHz cutoff. (Default)
        ; 1 - 3.3 kHz cutoff for increased high end, sibilance and brightness.
;
txhpf = 1    ; Transmitter Audio High Pass Filter 0,1,2
        ; 0 - 300 Hz cutoff Reduce interference between voice and sub-audible signaling tones and codes. (default)
        ; 1 - 250 Hz cutoff Increase bass response in transmitted audio.
        ; 2 - 120 Hz cutoff for special applications requiring additional bass response in transmitted audio.
        ; Not recommended due to the increased possibility of voice energy interfering with sub-audible signaling.
;
;txoffdelay = 0    ; Ignore the reciever for a specified number of 20 millisecond
        ; intervals after the transmitter unkeys.
        ; This is useful when setting up a half-duplex link with an existing
        ; repeater, where you need to ignore the repeater's hangtime.
